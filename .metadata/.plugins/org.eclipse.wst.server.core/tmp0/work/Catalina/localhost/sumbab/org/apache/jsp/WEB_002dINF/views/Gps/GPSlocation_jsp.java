/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-05-11 20:02:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.Gps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class GPSlocation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Win10/Desktop/theLast/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sumbab/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1618837376333L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>내 위치 주변 맛집과 카페</title>\r\n");
      out.write("<style>\r\n");
      out.write(".wrap {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\tbottom: 40px;\r\n");
      out.write("\twidth: 188px;\r\n");
      out.write("\theight: 132px;\r\n");
      out.write("\tmargin-left: -85px;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tfont-family: 'Malgun Gothic', dotum, '돋움', sans-serif;\r\n");
      out.write("\tline-height: 1.5;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap * {\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap .info {\r\n");
      out.write("\twidth: 286px;\r\n");
      out.write("\theight: 120px;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tborder-bottom: 2px solid #ccc;\r\n");
      out.write("\tborder-right: 1px solid #ccc;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap .info:nth-child(1) {\r\n");
      out.write("\tborder: 0;\r\n");
      out.write("\tbox-shadow: 0px 1px 2px #888;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info .title {\r\n");
      out.write("\tpadding: 5px 0 0 10px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tbackground: #eee;\r\n");
      out.write("\tborder-bottom: 1px solid #ddd;\r\n");
      out.write("\tfont-size: 18px;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info .close {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 10px;\r\n");
      out.write("\tright: 10px;\r\n");
      out.write("\tcolor: #888;\r\n");
      out.write("\twidth: 17px;\r\n");
      out.write("\theight: 17px;\r\n");
      out.write("\tbackground:\r\n");
      out.write("\t\turl('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/overlay_close.png');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info .close:hover {\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info .body {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info .desc {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".desc .ellipsis {\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tfont-family: 'Malgun Gothic', dotum, '돋움', sans-serif;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\ttext-overflow: ellipsis;\r\n");
      out.write("\twhite-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".desc .jibun {\r\n");
      out.write("\tfont-size: 11px;\r\n");
      out.write("\tcolor: #888;\r\n");
      out.write("\tmargin-top: -2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info:after {\r\n");
      out.write("\tcontent: '';\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tmargin-left: -12px;\r\n");
      out.write("\tleft: 50%;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("\twidth: 22px;\r\n");
      out.write("\theight: 12px;\r\n");
      out.write("\tbackground:\r\n");
      out.write("\t\turl('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".info .link {\r\n");
      out.write("\tcolor: #5085BB;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>내위치근방에 맛집/카페 보기</h1>\r\n");
      out.write("\t<h4>(*고객님 위치 근방에 마커를 클릭하면 상세보기가 나옵니다!*)</h4>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 아래 api를 사용할려면 카카오 개발자 센터에서 키값을 할당받아 등록해야함 -->\r\n");
      out.write("\t<div id=\"map\" style=\"width: 70%; height: 500px;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\t\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=c771ec3c7832fcdda8a8784dd25a4cb4&libraries=services\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tvar circle;\r\n");
      out.write("\t\tvar circleList = [];\r\n");
      out.write("\t\tvar mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("\r\n");
      out.write("\t\tmapOption = {\r\n");
      out.write("\t\t\tcenter : new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n");
      out.write("\t\t\tlevel : 5\r\n");
      out.write("\t\t// 지도의 확대 레벨 \r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tvar geocoder = new daum.maps.services.Geocoder();\r\n");
      out.write("\r\n");
      out.write("\t\tvar map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n");
      out.write("\r\n");
      out.write("\t\t// HTML5의 geolocation으로 사용할 수 있는지 확인합니다 \r\n");
      out.write("\t\tif (navigator.geolocation) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n");
      out.write("\t\t\tnavigator.geolocation.getCurrentPosition(function(position) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar lat = position.coords.latitude, // 위도\r\n");
      out.write("\t\t\t\tlon = position.coords.longitude; // 경도\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n");
      out.write("\t\t\t\tmessage = '<div style=\"padding:5px;\">현재 내 위치입니다!</div>'; // 인포윈도우에 표시될 내용입니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 마커와 인포윈도우를 표시합니다\r\n");
      out.write("\t\t\t\tdisplayMarker(locPosition, message);\r\n");
      out.write("\t\t\t\tDrawCircle(lat, lon)\r\n");
      out.write("\t\t\t\tDrawHumanMarker(lat, lon);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t} else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar locPosition = new kakao.maps.LatLng(33.450701, 126.570667), message = 'geolocation을 사용할수 없어요..'\r\n");
      out.write("\r\n");
      out.write("\t\t\tdisplayMarker(locPosition, message);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 지도에 마커와 인포윈도우를 표시하는 함수입니다\r\n");
      out.write("\t\tfunction displayMarker(locPosition, message) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 마커를 생성합니다\r\n");
      out.write("\t\t\tvar marker = new kakao.maps.Marker({\r\n");
      out.write("\t\t\t\tmap : map,\r\n");
      out.write("\t\t\t\tposition : locPosition\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar iwContent = message, // 인포윈도우에 표시할 내용\r\n");
      out.write("\t\t\tiwRemoveable = true;\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 인포윈도우를 생성합니다\r\n");
      out.write("\t\t\tvar infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t\t\t\tcontent : iwContent,\r\n");
      out.write("\t\t\t\tremovable : iwRemoveable\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 인포윈도우를 마커위에 표시합니다 \r\n");
      out.write("\t\t\tinfowindow.open(map, marker);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 지도 중심좌표를 접속위치로 변경합니다\r\n");
      out.write("\t\t\tmap.setCenter(locPosition);\r\n");
      out.write("\r\n");
      out.write("\t\t\tCreateMakers();\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction CreateMakers() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar geocoder = new daum.maps.services.Geocoder();\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar storeNumArray = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar classifyArray = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar cityArray = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar districtArray = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar addressArray = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar nameArray = [];\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pictureArray = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tfor (let i = 0; i < addressArray.length; i++) {\r\n");
      out.write("\t\t\t\tgeocoder\r\n");
      out.write("\t\t\t\t\t\t.addressSearch(\r\n");
      out.write("\t\t\t\t\t\t\t\taddressArray[i],\r\n");
      out.write("\t\t\t\t\t\t\t\tfunction(result, status, data) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t// 정상적으로 검색이 완료됐으면 \r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (status === daum.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar coords = new daum.maps.LatLng(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tresult[0].y, result[0].x);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t// 결과값으로 받은 위치를 마커로 표시합니다\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar marker = new daum.maps.Marker({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmap : map,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tposition : coords\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t// 마커를 지도에 표시합니다.\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmarker.setMap(map);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//=====================================================================================================================================\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconsole.log(content);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconsole.log(nameArray[i]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t// 커스텀 오버레이를 생성합니다\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar customOverlay = new daum.maps.CustomOverlay(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tposition : coords,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcontent : content\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar content = document\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t.createElement('div');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcontent.className = 'customOverlay';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcontent.innerHTML = '<div class=\"wrap\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '    <div class=\"info\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        <div class=\"title\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ nameArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '            <div class=\"\" onclick=\"closeOverlay()\" title=\"\"></div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        <div class=\"body\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '            <div class=\"desc\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '                <div class=\"ellipsis\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ classifyArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t\t<br>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ cityArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ districtArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t\t<br>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ addressArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t<div><a href=\"http://localhost:8090/sumbab/store/StoreView/' \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    +storeNumArray[i]+ '\" target=\"_blank\" class=\"link\">가게상세보기페이지로이동하기</a></div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '           </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '    </div>' \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '</div>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//========================================================================================================================================\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar closeBtn = document\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t.createElement('button');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcloseBtn.innerHTML ='<div class=\"wrap\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '    <div class=\"info\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        <div class=\"title\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ nameArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '            <div class=\"\" onclick=\"closeOverlay()\" title=\"\"></div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        <div class=\"body\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '            <div class=\"desc\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '                <div class=\"ellipsis\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ classifyArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t\t<br>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ cityArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ districtArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t\t<br>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ addressArray[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '\t\t\t\t<div><a href=\"http://localhost:8090/sumbab/store/StoreView/' \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    +storeNumArray[i]+ '\" target=\"_blank\" class=\"link\">가게상세보기페이지로이동하기</a></div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '           </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '        </div>'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '    </div>' \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ '</div>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcloseBtn.onclick = function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcustomOverlay.setMap(null);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcontent.appendChild(closeBtn);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcustomOverlay.setContent(content);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tkakao.maps.event.addListener(marker,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t'click', function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcustomOverlay.setMap(map);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//마커를 사람아이콘으로 꾸며봤습니다\r\n");
      out.write("\t\tfunction DrawHumanMarker(lat, lon) {\r\n");
      out.write("\t\t\tconsole.log(\"DrawHumanMarker \");\r\n");
      out.write("\t\t\tvar imageSrc = 'https://ifh.cc/g/ltBYAF.png', imageSize = new daum.maps.Size(\r\n");
      out.write("\t\t\t\t\t60, 60), // 마커이미지의 크기입니다\r\n");
      out.write("\t\t\timageOption = {\r\n");
      out.write("\t\t\t\toffset : new daum.maps.Point(20, 50)\r\n");
      out.write("\t\t\t}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar markerImage = new daum.maps.MarkerImage(imageSrc, imageSize,\r\n");
      out.write("\t\t\t\t\timageOption), markerPosition = new daum.maps.LatLng(lat,\r\n");
      out.write("\t\t\t\t\tlon); // 마커가 표시될 위치입니다\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar poiDaumMarker = new daum.maps.Marker({\r\n");
      out.write("\t\t\t\tposition : markerPosition,\r\n");
      out.write("\t\t\t\timage : markerImage\r\n");
      out.write("\t\t\t// 마커이미지 설정 \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tpoiDaumMarker.setMap(map);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//원반경까지 꾸미기는 덤으로다가\r\n");
      out.write("\t\tfunction DrawCircle(lat, lon) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tconsole.log(\"DrawCircle\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tcircle = new daum.maps.Circle({\r\n");
      out.write("\t\t\t\tcenter : new daum.maps.LatLng(lat, lon), // 원의 중심좌표 입니다 \r\n");
      out.write("\t\t\t\tradius : 500, // 미터 단위의 원의 반지름입니다 \r\n");
      out.write("\t\t\t\tstrokeWeight : 5, // 선의 두께입니다 \r\n");
      out.write("\t\t\t\tstrokeColor : '#75B8FA', // 선의 색깔입니다\r\n");
      out.write("\t\t\t\tstrokeOpacity : 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n");
      out.write("\t\t\t\tstrokeStyle : 'dashed', // 선의 스타일 입니다\r\n");
      out.write("\t\t\t\tfillColor : '#CFE7FF', // 채우기 색깔입니다\r\n");
      out.write("\t\t\t\tfillOpacity : 0.3\r\n");
      out.write("\t\t\t// 채우기 불투명도 입니다   \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tcircle.setMap(map);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/Gps/GPSlocation.jsp(209,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/Gps/GPSlocation.jsp(209,3) '${GPS}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${GPS}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/Gps/GPSlocation.jsp(209,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("GPS");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("\t\t\tstoreNumArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.storeNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\r\n");
            out.write("\t\t\tclassifyArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.classify}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\r\n");
            out.write("\t\t\tcityArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.citycode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\r\n");
            out.write("\t\t\tdistrictArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.districtcode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\r\n");
            out.write("\t\t\taddressArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.address}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\r\n");
            out.write("\t\t\tnameArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\tpictureArray.push(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${GPS.picture}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");\r\n");
            out.write("\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
